name: Docker Hub Build (Backup Solution)

on:
  workflow_dispatch: # Manual trigger only
  push:
    branches: [ docker-hub-test ]

env:
  DOCKER_USERNAME: skpokala
  IMAGE_PREFIX: skpokala/ice-breaker-app

jobs:
  build-and-push-dockerhub:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Free up disk space
      run: |
        df -h
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo docker image prune --all --force
        df -h

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        platforms: linux/amd64
        tags: |
          ${{ env.IMAGE_PREFIX }}-backend:latest
          ${{ env.IMAGE_PREFIX }}-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        platforms: linux/amd64
        tags: |
          ${{ env.IMAGE_PREFIX }}-frontend:latest
          ${{ env.IMAGE_PREFIX }}-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate summary
      run: |
        echo "## ðŸš€ Docker Hub Images Published" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Images Available:" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend**: \`${{ env.IMAGE_PREFIX }}-backend:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend**: \`${{ env.IMAGE_PREFIX }}-frontend:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Quick Deploy:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.IMAGE_PREFIX }}-backend:latest" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.IMAGE_PREFIX }}-frontend:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY 