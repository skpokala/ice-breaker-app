name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    permissions:
      contents: read
      packages: write
      id-token: write
      actions: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Free up disk space
      run: |
        df -h
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        df -h

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set lowercase repository name
      run: |
        echo "REPO_LOWER=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
        echo "Original repository: $GITHUB_REPOSITORY"
        echo "Lowercase repository: ${GITHUB_REPOSITORY,,}"

    - name: Debug repository information
      run: |
        echo "Repository: ${{ github.repository }}"
        echo "Repository owner: ${{ github.repository_owner }}"
        echo "Repository name: ${{ github.event.repository.name }}"
        echo "Lowercase repo: ${{ env.REPO_LOWER }}"
        echo "Event name: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Actor: ${{ github.actor }}"

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify registry authentication
      if: github.event_name != 'pull_request'
      run: |
        echo "âœ… GHCR authentication successful"
        echo "Ready to build and push Docker images"

    - name: Build backend image (test build first)
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        platforms: linux/amd64
        tags: |
          ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/backend:latest
          ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Build frontend image (test build first)
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: false  
        platforms: linux/amd64
        tags: |
          ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/frontend:latest
          ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Push backend image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        platforms: linux/amd64
        tags: |
          ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/backend:latest
          ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/backend:${{ github.sha }}
        cache-from: type=gha
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Push frontend image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        platforms: linux/amd64
        tags: |
          ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/frontend:latest
          ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/frontend:${{ github.sha }}
        cache-from: type=gha
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Generate deployment summary
      if: github.event_name != 'pull_request'
      run: |
        echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Images Published:" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend**: \`${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/backend:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend**: \`${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/frontend:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Quick Deploy:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/backend:latest" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/frontend:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY 